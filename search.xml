<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[阿里云CentOs 7安装nginx]]></title>
    <url>%2Fblog%2F2017%2F11%2F28%2F%E9%98%BF%E9%87%8C%E4%BA%91CentOs%207%E5%AE%89%E8%A3%85nginx%2F</url>
    <content type="text"><![CDATA[阿里云CentOs 7下安装nginx安装所需环境Nginx 是 C语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 CentOS 7 作为安装环境。 一. gcc 安装安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装： 1yum install gcc-c++ 二. PCRE pcre-devel 安装PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。命令： 1yum install -y pcre pcre-devel 三. zlib 安装zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。 1yum install -y zlib zlib-devel 四. OpenSSL 安装OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。 1yum install -y openssl openssl-devel 执行以上命令后出现 ==nothing to do== 即为已经安装过 安装与配置使用wget命令下载到/usr/local/src12cd /usr/local/srcwget -c https://nginx.org/download/nginx-6.11.3.tar.gz 解压12tar -zxvf nginx-6.11.3.tar.gzcd nginx-6.11.3 配置1.使用默认配置装到/usr/local/nginx1./configure 2自定义配置（不推荐）12345678910111213./configure \--prefix=/usr/local/nginx \--conf-path=/usr/local/nginx/conf/nginx.conf \--pid-path=/usr/local/nginx/conf/nginx.pid \--lock-path=/var/lock/nginx.lock \--error-log-path=/var/log/nginx/error.log \--http-log-path=/var/log/nginx/access.log \--with-http_gzip_static_module \--http-client-body-temp-path=/var/temp/nginx/client \--http-proxy-temp-path=/var/temp/nginx/proxy \--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \--http-scgi-temp-path=/var/temp/nginx/scgi 编译安装1make&amp;&amp;make install 启动、停止nginx12345cd /usr/local/nginx/sbin./nginx //启动nginx./nginx -s stop //此方式停止步骤是待nginx进程处理任务完毕进行停止。./nginx -s quit //此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。./nginx -s reload //重启nginx 查询nginx进程 1ps aux|grep nginx 重启nginx1.先停止再启动（推荐）：对 nginx 进行重启相当于先停止再启动，即先执行停止命令再执行启动命令。如下： 12./nginx -s quit./nginx 2.重新加载配置文件：当 ngin x的配置文件 nginx.conf 修改后，要想让配置生效需要重启 nginx，使用-s reload不用先停止 ngin x再启动 nginx 即可将配置信息在 nginx 中生效，如下：1./nginx -s reload 开机自启动在rc.local增加启动代码即可 1vi /etc/rc.local 在最后增加/usr/local/nginx/sbin/nginx设置执行权限：1chmod 755 rc.local 配置文件打开/usr/local/nginx/conf 12cd /usr/local/nginx/confvi ./nginx.conf 把server_name改为自己的公网ip或域名，端口号默认为80。root设置为根目录，index根文件。 阿里云开放端口（作为小菜鸟这里卡主我两天）登录到阿里云官网。点击控制台，选择自己服务器。点击安全组–&gt;配置规则–&gt;添加安全组规则，然后就开放刚刚在nginx.conf设置的端口号 在浏览器访问你的域名，当你看到下面的图就成功安装nginx了]]></content>
      <categories>
        <category>搭建服务器</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云CentOs 7安装nginx]]></title>
    <url>%2Fblog%2F2017%2F11%2F28%2F%E9%98%BF%E9%87%8C%E4%BA%91CentOs%207%E5%AE%89%E8%A3%85nodejs%2F</url>
    <content type="text"><![CDATA[阿里云CentOs 7安装nginx使用XShell连接到目标服务器后1.把yum更新到最新版本： 1yum -y update 2.将使用最新源代码构建Node.js，要进行软件的安装，需要一组用来编译源代码的开发工具： 1yum -y groupinstall &quot;Development Tools&quot; 安装node.js1.开始安装Node.js，先进入/usr/src文件夹，从Node.js的站点中获取压缩档源代码, 我选择的版本为v6.11.3： 12cd /usr/local/srcwget http://nodejs.org/dist/v0.10.18/node-v6..11.3.tar.gz 2.解压缩源文件，并且进入到压缩后的文件夹中: 12tar zxf node-v6..11.3.tar.gz cd node-v6..11.3 3.执行配置脚本来进行编译预处理: 1./configure 4.开始编译源代码: 1make&amp;&amp;make install 5.测试是否安装成功12node -vnpm -v //npm是模块管理器 若每条命令后面输出版本号即安装成功]]></content>
      <categories>
        <category>搭建服务器</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一个博客]]></title>
    <url>%2Fblog%2F2017%2F11%2F27%2Ffirst%2F</url>
    <content type="text"><![CDATA[这是第一个博客的内容]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2F2017%2F11%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
